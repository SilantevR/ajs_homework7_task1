import Validator from '../js/Validator';

describe('Класс Validator', () => {
  const userName = 'adm-in544adm___in';
  const item = new Validator();

  test('Определён', () => {
    expect(Validator).toBeDefined();
  });
  test('Создаёт экземпляр Validator с нужными параметрами', () => {
    expect(item).toBeInstanceOf(Validator);
  });
  test('validateUsername(name) у экземпляра класса Validator', () => {
    expect(item.validateUsername(userName)).toBe('Имя прошло проверку');
  });

  test.each([
    [
      'Имя не должно начинаться цифрами, символами подчёркивания или тире.',
      '528admin',
    ],
    [
      'Имя не должно начинаться цифрами, символами подчёркивания или тире.',
      '-admin',
    ],
    [
      'Имя не должно начинаться цифрами, символами подчёркивания или тире.',
      '_admin',
    ],
    [
      'Имя не должно заканчиваться цифрами, символами подчёркивания или тире.',
      'admin486',
    ],
    [
      'Имя не должно заканчиваться цифрами, символами подчёркивания или тире.',
      'admin-',
    ],
    [
      'Имя не должно заканчиваться цифрами, символами подчёркивания или тире.',
      'admin_',
    ],
    ['Имя не должно содержать подряд более трёх цифр.', 'adm5495in'],
    ['Имя не должно содержать подряд более трёх цифр.', 'adm549563675765in'],
    [
      'Допустимы только латинские буквы, символы тире -, подчёркивания _ и цифры (0-9)',
      'a.dm54_in',
    ],
    [
      'Допустимы только латинские буквы, символы тире -, подчёркивания _ и цифры (0-9)',
      'aЯрdm54_in',
    ],
    [
      'Допустимы только латинские буквы, символы тире -, подчёркивания _ и цифры (0-9)',
      'aярdm54_in',
    ],
  ])('Выдает ошибку error: %s с name: %s', (error, name) => {
    function errorValidate() {
      item.validateUsername(name);
    }
    expect(errorValidate).toThrowError(new Error(error));
  });
});
